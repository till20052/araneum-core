<?php

namespace Araneum\Bundle\MailBundle\Repository;

use Araneum\Base\Repository\CountableTrait;
use Doctrine\ORM\EntityRepository;
use Araneum\Bundle\MailBundle\Entity\Mail as EntityMail;

/**
 * MailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MailRepository extends EntityRepository implements \Countable
{
    use CountableTrait;

    /**
     * Get Received Emails
     *
     * @return array
     */
    public function getReceivedEmailsFromApplications()
    {
        $qb = $this->createQueryBuilder('M');

        return $qb->select('A.name', 'DATE_PART(hour, M.createdAt) AS hours', 'COUNT(M) AS emails')
            ->leftJoin('M.application', 'A')
            ->where(
                $qb->expr()->between('M.createdAt', ':start', ':end')
            )
            ->groupBy('hours', 'A.name')
            ->setParameters(
                [
                    'start' => date('Y-m-d H:i:s', time() - 86400),
                    'end' => date('Y-m-d H:i:s', time()),
                ]
            )
            ->getQuery()
            ->getResult();
    }

    /**
     * get All Emails list
     * @param int $limit
     * @return array
     */
    public function getAllEmails($limit)
    {
        return $this->createQueryBuilder('M')
            ->where('M.status = :status')
            ->setParameter('status', EntityMail::STATUS_NEW)
            ->orderBy('M.id', 'ASC')
            ->setFirstResult(0)
            ->setMaxResults($limit)
            ->getQuery()
            ->getResult();
    }
}
