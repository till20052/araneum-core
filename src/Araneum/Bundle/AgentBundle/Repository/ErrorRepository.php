<?php

namespace Araneum\Bundle\AgentBundle\Repository;

use Araneum\Base\Repository\CountableTrait;
use Doctrine\ORM\EntityRepository;

/**
 * ErrorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ErrorRepository extends EntityRepository implements \Countable
{
    use CountableTrait;

    /**
     * Get received Errors from all Applications in last 24 hours
     *
     * @return array
     */
    public function getReceivedErrorsFromAppsInLast24H()
    {
        return $this->createQueryBuilder('ERR')
            ->select('APP.name', 'ERR.type', 'ERR.sentAt')
            ->leftJoin('ERR.application', 'APP')
            ->where('ERR.sentAt BETWEEN :start AND :end')
            ->orderBy('ERR.sentAt', 'ASC')
            ->setParameters(
                [
                    'start' => date('Y-m-d H:i:s', time() - 86400),
                    'end' => date('Y-m-d H:i:s', time()),
                ]
            )
            ->getQuery()
            ->getResult();
    }

    /**
     * Count elements of an object for period
     * By default count errors by field "sentAt" for last 24h
     *
     * @param  string $period
     * @return int Count as an integer.
     */
    public function countErrorsByTimeInterval($period = 'P1D')
    {
        $date = new \DateTime();
        $date->sub(new \DateInterval($period));
        $result = $this->createQueryBuilder('ERR')
            ->select('COUNT(ERR.id) as repoCount')
            ->where('ERR.sentAt BETWEEN :start AND :end')
            ->setParameters(
                [
                    'start' => $date->format('Y-m-d H:i:s'),
                    'end' => date('Y-m-d H:i:s', time()),
                ]
            )
            ->getQuery()
            ->getOneOrNullResult();

        if (is_null($result)) {
            $result = ['repoCount' => 0];
        }

        return (int) $result['repoCount'];
    }
}
